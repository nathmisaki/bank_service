// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nelsonmhjr/bank_service/models (interfaces: Bindable)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBindable is a mock of Bindable interface
type MockBindable struct {
	ctrl     *gomock.Controller
	recorder *MockBindableMockRecorder
}

// MockBindableMockRecorder is the mock recorder for MockBindable
type MockBindableMockRecorder struct {
	mock *MockBindable
}

// NewMockBindable creates a new mock instance
func NewMockBindable(ctrl *gomock.Controller) *MockBindable {
	mock := &MockBindable{ctrl: ctrl}
	mock.recorder = &MockBindableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBindable) EXPECT() *MockBindableMockRecorder {
	return m.recorder
}

// ShouldBind mocks base method
func (m *MockBindable) ShouldBind(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShouldBind", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ShouldBind indicates an expected call of ShouldBind
func (mr *MockBindableMockRecorder) ShouldBind(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShouldBind", reflect.TypeOf((*MockBindable)(nil).ShouldBind), arg0)
}
